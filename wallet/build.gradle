apply plugin: 'com.android.application'

ext {
    archivesBaseName = 'ctp-wallet'
    androidSupportVersion = '28.0.0'
}
repositories {
    mavenLocal()
    maven {
        url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        name 'OJO snapshots'
    }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

dependencies {
    //noinspection GradleCompatible
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation(project(':integration-android')) {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation "com.android.support:support-annotations:$androidSupportVersion"
    implementation "com.android.support:support-compat:$androidSupportVersion"
    implementation("com.android.support:support-v13:$androidSupportVersion") {
        exclude(group: 'com.android.support', module: 'support-fragment')
        exclude(group: 'com.android.support', module: 'support-media-compat')
    }
    implementation "com.android.support:support-core-utils:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support:preference-v7:$androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta2'
    //--------------------------------------------------
    //implementation fileTree(dir: 'ext_jar', include: ['ctpj-core-0.16.3.jar'])
    //implementation fileTree(dir: 'D:\\bitDev\\ctp-wallet_android\\ext_jar\\', include: ['*.jar'])
    //implementation 'D:\\bitDev\\ctp-wallet_android\\ext_jar\\org.citypay.ctpj:ctpj-core:0.16.3'
    //implementation 'D:\\bitDev\\ctp-wallet_android\\ext_jar\\ctpj-core-0.16.3.jar'
    //implementation "org.citypay.ctpj:ctpj-core:$ctpjVersion"
    //implementation 'ctpj-core-0.16.3.jar'
    //api fileTree(dir: 'ctpj')
    //api fileTree(include: ['*.jar'], dir: 'libs')
    //compile group: 'org.citypay.ctpj', name: 'ctpj-core', version: '0.16.3'
    //compile files('libs\\ctpj-core-0.16.3.jar')
    implementation project(path: ':core')
    //api fileTree(include: ['ctpj-core-0.16.3.jar'], dir: 'libs')
    //implementation files('libs\\ctpj-core-0.16.3.jar')
    //implementation "org.dashj:dashj-core:$ctpjVersion"
    // https://mvnrepository.com/artifact/org.bitcoinj/bitcoinj-core
    //compile group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.13'
    // https://mvnrepository.com/artifact/org.bitcoinj/bitcoinj-core
    //compile group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.14'
    //implementation "org.bitcoinj:bitcoin-core:0.15.5"
    //compile group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.15.5'

//    implementation project(path: ':core')  // 20191011
//    implementation project(path: ':bls')  // 20191011


    //--------------------------------------------------
    implementation 'com.google.protobuf:protobuf-java:3.10.0'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp:logging-interceptor:2.7.5'
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation "org.slf4j:slf4j-api:${var}"
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude(group: 'com.google.android', module: 'android')
    }
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation project(path: ':common')
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"

    //Uphold Integration
    implementation project(path: ':uphold-integration')

    implementation 'com.android.support:multidex:1.0.3'

    implementation ('com.google.firebase:firebase-inappmessaging-display:19.0.1') {
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
        exclude group: 'com.google.firebase', module: 'protolite-well-known-types'
    }
    implementation 'com.google.firebase:firebase-core:17.2.0'

    testImplementation 'junit:junit:4.12'
    //Espresso
    androidTestImplementation ('com.android.support.test:runner:1.0.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.2') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('com.android.support.test.espresso:espresso-intents:3.0.2') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.android.support', module: 'support-annotations'
    }

}


ext {
    archivesBaseName = 'ctp-wallet'
}

android {
    compileSdkVersion 28

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true
        generatedDensities = ['hdpi', 'xhdpi']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
        }
        externalNativeBuild {
            cmake {
                cFlags '-DHAVE_CONFIG_H -DWORD=32'
                cppFlags ""
            }
        }
    }

    buildTypes {
        all {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg', 'proguardTest-rules.txt'
        }
        debug {
            debuggable true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
    flavorDimensions "default"
    productFlavors {
        prod {
            applicationId = "org.citypay.wallet"
        }
    }
    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }
    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixPatterns.gwt.xml'
        exclude 'com/google/thirdparty/publicsuffix/PublicSuffixType.gwt.xml'
        exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/bitcoinj/crypto/cacerts'
        exclude 'org.bitcoin.production.checkpoints.txt'
        exclude 'org.bitcoin.test.checkpoints.txt'
    }
    dexOptions {
        preDexLibraries true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildToolsVersion = '28.0.3'
}

clean {
    file('src/main/jniLibs').deleteDir()
}

apply plugin: 'com.google.gms.google-services'